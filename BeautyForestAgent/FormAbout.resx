<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxAQEhUSEhIVFRUVFxUYFhUWFhcWFxsVGBIWGBYgGBga
        HyogGBolGxcWITEhJSkrLi4uGCAzODMuNygtLiv/2wBDAQoKCg0NDRUQDRUtHh0ZLS0tNy0tLSsrLSst
        Kys3NysrKysrKysrKys3LTctLSsrKysrNysrKzcrKysrKysrKyv/wAARCADhAOEDASIAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAYHAQQFAwII/8QAShAAAQMCBAMEBQcHCwMFAAAAAQACAwQRBRIhMQYH
        QRMiUWEUMnGBkRUjM5KhsdEWFyVCUrLBJDRDU2Jyc4KTotJFVPAINWOzwv/EABUBAQEAAAAAAAAAAAAA
        AAAAAAAB/8QAFhEBAQEAAAAAAAAAAAAAAAAAAAFB/9oADAMBAAIRAxEAPwC8UREBERAREQEREBERAREQ
        EREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQ
        EREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERARFg
        myBdZuqvxXmPWVEz4cHovSxF9JMT83cbhuwPtvr0C7vL7jluJiSOSIwVMBtLC4k21IuLgHcajogmaIiA
        iIgIiICIiAiIgIiICIiAiIgIiICwVlcjiusfBR1EsYu+OGRzR5hpsgiPEfN+go53U7WTVEjSWuEQaWhw
        NiLk3J9g6Le4U5mUlfN6N2c1PORdsc7Q3MLX7pBPwNlocksGiioGVIAdNUFz5JCO96xAF+gGqY/SNq8e
        o2tGtJC+aV3hnNowT56myCxQsqP8T8X0OHNzVMwYT6sYu6R3saNfedFCpOMMfrnj5Ow4RQk/TVWlx0Ni
        RYewOKC1UVbnh/iSb6XFIYR1EMV/gSAsfm8xJw7+OVV/7IsPvQWSo1zHklbhtW6EkPETrW3tbW3na6jP
        5vcUAsMcqPK7fv1uvCbhPiSEfM4syb+xNHYHxubG4Qd3lMylbhkApi090GSxGbtSO9nA6+3ouLVwCLia
        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
        pERAREQEREBERAREQEREH//Z
</value>
  </data>
</root>